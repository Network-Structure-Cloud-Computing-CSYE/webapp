name: Packer Build

 
on:
  pull_request:
    types: [closed]
    branches: [ main ]


jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      DB_DATABASE: ${{secrets.DB_DATABASE}}
      DB_HOST: ${{secrets.DB_HOST}}
      DB_PASS: ${{secrets.DB_PASS}}
      DB_USER: ${{secrets.DB_USER}}
      DB_NAME: ${{secrets.DB_NAME}}
      DB_DIALECT: ${{secrets.DB_DIALECT}}
      DB_POOL_MIN: ${{secrets.DB_POOL_MIN}}
      DB_POOL_MAX: ${{secrets.DB_POOL_MAX}}
      DB_POOL_ACQUIRE: ${{secrets.DB_POOL_ACQUIRE}}
      DB_POOL_IDLE: ${{secrets.DB_POOL_IDLE}}
      PORT: ${{secrets.PORT}}
      USERS_CSV_PATH: ${{secrets.USERS_CSV_PATH}}
      SOURCE_AMI: ${{ secrets.SOURCE_AMI }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      DEFAULT_SUBNET_ID: ${{ secrets.DEFAULT_SUBNET_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_AMI_USERS: ${{ secrets.AWS_AMI_USERS }}
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v2
    - run: npm i    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

 
    - name: Start MySql Server
      run: sudo systemctl start mysql

 
    - name: Create database in the MySql server
      run: sudo mysql --user=$DB_USER --password=$DB_PASS -e "create database $DB_DATABASE";

    - run: npm test

    - name: Zip Git Repository
      uses: montudor/action-zip@v1
      with:
        args: zip -r webapp.zip .

    - name: Setup `packer`
      uses: hashicorp/setup-packer@main

    - name: Check version of packer
      run: packer -v

    - name: Add required plugins
      run: packer init .

    - name: format packer content
      run: packer fmt .

    - name: validate packer
      run: packer validate .

    - name: packer build
      run: |
        packer build -var "region=$AWS_DEFAULT_REGION" \
        -var "ssh_username=$SSH_USERNAME" \
        -var "ami_users=$AWS_AMI_USERS" test.pkr.hcl








# name: Packer Build

 
# on:
#   pull_request:
#     types: [closed]
#     branches:
#        - main

 

# env:
#   DB_DATABASE: ${{secrets.DB_DATABASE}}
#   DB_HOST: ${{secrets.DB_HOST}}
#   DB_PASS: ${{secrets.DB_PASS}}
#   DB_USER: ${{secrets.DB_USER}}
#   DB_NAME: ${{secrets.DB_NAME}}
#   DB_DIALECT: ${{secrets.DB_DIALECT}}
#   DB_POOL_MIN: ${{secrets.DB_POOL_MIN}}
#   DB_POOL_MAX: ${{secrets.DB_POOL_MAX}}
#   DB_POOL_ACQUIRE: ${{secrets.DB_POOL_ACQUIRE}}
#   DB_POOL_IDLE: ${{secrets.DB_POOL_IDLE}}
#   PORT: ${{secrets.PORT}}
#   USERS_CSV_PATH: ${{secrets.USERS_CSV_PATH}}
#   SOURCE_AMI: ${{ secrets.SOURCE_AMI }}
#   SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
#   DEFAULT_SUBNET_ID: ${{ secrets.DEFAULT_SUBNET_ID }}
#   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#   AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
#   AWS_AMI_USERS: ${{ secrets.AWS_AMI_USERS }}

 

# jobs:
#   merge:
#     if: github.event.pull_request.merged
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Git Repository
#         uses: actions/checkout@v2

#       - name: Zip Git Repository
#         uses: montudor/action-zip@v1
#         with:
#           args: zip -r webapp.zip .


#       - name: Packer build
#         id: packer_build
#         uses: hashicorp/packer-github-actions@master
#         with:
#           command: build
#           target: ./packer/ami.pkr.hcl
#           working_directory: .